{
  "hash": "a99e2415643a3a54a42298c24c6db91c",
  "result": {
    "markdown": "---\ntitle: \"Produire des documents\"\nsubtitle: \"De R Markdown √† Quarto pour aller plus loin avec ses publications\"\ninstitute: \"Posit\"\nauthor: \"Christophe Dervieux\"\ndate: \"2023-06-21\"\nfooter: \"[üîó cderv.quarto.pub/tuto-quarto-rr-2023]()\"\nformat:\n  clean-revealjs:\n    theme: [default, ../reveal-style.scss]\n    transition: fade\n    chalkboard: true\nrevealjs-plugins:\n  - attribution\neditor: visual\nexecute:\n  freeze: auto\n  echo: true\n---\n\n\n\n\n## Configurer le format\n\nConfiguration via YAML avec la cl√© `format`\n\n```yaml\ntitle: \"My Document\"\nformat: \n  html:\n    toc: true\n    code-fold: true\n```\n\n## De multiples formats...\n\n:::: columns\n::: column\n* `format: html`\n* `format: pdf`\n:::\n::: column\n* `format: docx`\n* `format: revealjs`\n:::\n::::\n\n```yaml\nformat: \n  html:\n    code-fold: true\n  pdf:\n    lof: true\ntoc: true #<1>\n```\n\n1. Option commune aux formats HTML et PDF\n\n<br>\n\n## ...bas√©e sur Pandoc \n\n## {background-image=\"images/quarto-all-format.gif\"}\n\n# Options Specifiques\n\n## Themes HTML {#html-theme}\n\nLe HTML de Quarto est stylis√© avec Bootstrap 5 et des valeurs par d√©faut choisies pour Quarto (_opiniated defaults_).\n\n```yaml\n---\nformat:\n  html:\n    theme: litera\n---\n```\n</br>\n\n. . .\n\n::::: {.r-stack}\n\nVous pouvez √©galement utiliser un th√®me et personnaliser les composants avec SCSS/SASS.\n\n```yaml\n---\nformat:\n  html:\n    theme: \n      - litera\n      - custom.scss\n---\n```\n\n:::: {.fragment}\n\n::: {.callout-note appearance=\"minimal\"}\nTalk sur le sujet plus tard dans la semaine ! üòâ\n:::\n\n::::\n:::::\n\n## _Code tools_\n\n```yaml\nformat:\n  html:\n    code-fold: true\n    code-tools: true\n```\n\n![](images/code-tools.png){fig-alt=\"Capture d'√©cran du menu ajout√© dans un HTML quarto quand code-tools est activ√©\"}\n\n## D√©couvrir les options ! \n\n* Guide Quarto: <https://quarto.org/docs/guide/>\n* Pages de r√©f√©rencement des options pour chaque format: <https://quarto.org/docs/reference/>\n\n# Formats multiples\n\nUne syntaxe commune pour simplifier ! \n\n## D√©mo \n\n::: callout\n\n# G√©n√©rons un PDF\n\n* Pas ou peu de changement depuis le fichier HTML que nous avons cr√©√©s\n:::\n\n::: {.callout-warning}\n\n## Etre configur√© pour LaTeX \n\nVous pouvez essayer \n\n* PDF = LaTeX => Installation de TinyTeX\n* LaTeX = Paquets CTAN => Installation longue\n\n:::\n\n## \n\nAllons plus pour produire des documents avec Quarto \n\n[[Next]{.button}](/3-documents/)",
    "supporting": [
      "3-documents_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}