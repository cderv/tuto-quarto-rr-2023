{
  "hash": "61f72204c21b5dad0a892bf2a0517276",
  "result": {
    "markdown": "---\ntitle: \"Passer de rmarkdown √† quarto\"\nsubtitle: \"De R Markdown √† Quarto pour aller plus loin avec ses publications\"\ninstitute: \"Posit\"\nauthor: \"Christophe Dervieux\"\ndate: \"2023-06-21\"\nformat: clean-revealjs\neditor: visual\n---\n\n\n\n\n## D√©marrer avec Quarto !\n\n::: callout\n# Faisons ensemble !\n\nCreer un projet Quarto depuis RStudio et produire un HTML.\n:::\n\n::: panel-tabset\n## RStudio IDE\n\nFile \\> New Project...\n\n![](images/rstudio-new-project-quarto.png){.absolute fig-alt=\"Menu cr√©ation de projet Quarto depuis RStudio IDE\" top=\"320\" left=\"400\" width=\"450\"}\n\n## Quarto CLI\n\n``` powershell\n$ quarto create project\n ? Type ¬ª default\n ? Directory ¬ª quarto-101\nCreating project at C:\\Users\\chris\\AppData\\Local\\Temp\\quarto-101:\n  - Created _quarto.yml\n  - Created Quarto-101.qmd\n```\n:::\n\n## Explorons...\n\n``` powershell\nquarto-101\n+¬¶¬¶ Quarto-101.qmd\nL¬¶¬¶ _quarto.yml\n```\n\n</br>\n\n::: columns\n::: column\n``` {.yaml filename=\"_quarto.yml\"}\nproject:\n  title: \"Quarto-101\"\n```\n:::\n\n::: column\n``` {.markdown filename=\"Quarto-101.qmd\"}\n---\ntitle: \"Quarto-101\"\n---\n\n## Quarto\n\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.\n```\n:::\n:::\n\n## Produire un HTML\n\n![Nouveau bouton pour transformer son document dans RStudio IDE](images/rstudio-render-quarto.png){fig-alt=\"Menu de RStudio IDE dans un document .qmd\"}\n\n``` {.bash filename=\"terminal\"}\nquarto render Quarto-101.qmd # defaults to html\nquarto render Quarto-101.qmd --to html\n```\n\n## Produire un HTML\n\n![](images/rstudio-render-quarto-html.png){fig-alt=\"Capture d'√©cran de la fen√™tre viewer de RStudio IDE apr√®s avoir g√©n√©rer un HTML.\"}\n\n## Et mes documents existants alors ?\n\n::: fragment\nConvertir de `.Rmd` √† `.qmd` ?\n:::\n\n::: fragment\nPas n√©cessaire car quarto est compatible!\n\n``` {.bash filename=\"terminal\"}\nquarto render my-favorite.Rmd --to html\n```\n:::\n\n## A vous !\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_c43d297f\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">02</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n::: callout\n# Ajoutons au projet\n\n1.  Cr√©er un sous-dossier dans le projet e.g `rapport`\n2.  Y d√©poser le fichier `.Rmd` d'exercices nomm√© [`manchots.Rmd`](https://raw.githubusercontent.com/cderv/tuto-quarto-rr-2023/main/exercises/manchots.Rmd) tel quel\n3.  Produire un HTML avec `quarto preview rapport/manchots.Rmd` dans le Terminal \n4.  Produire un HTML avec le bouton Render de l'IDE\n\n:::\n\n::: callout-tip\n\n## Afficher le bouton Render au lieu de Knit pour un Rmd dans un projet Quarto\n\nRetirer `output: html_document` de l'en-t√™te YAML and sauver le fichier: Le bouton **Render** devrait maintenant appara√Ætre.\n:::\n\n# De `.Rmd` √† `.qmd`\n\nVoyons ce qui change!\n\n## YAML: l'en-t√™te\n\nLe \"Yet Another Markup Language\" ou \"YAML Ain't Markup Language\" est toujours utilis√© pour fournir des m√©tadonn√©es au niveau du document.\n\n```{.yaml code-line-numbers=\"|5-7\"}\n---\ntitle: \"Une histoire de manchots\"\nauthor: \"C. Dervieux\"\ndate: \"21/06/2023\"\nformat: \n  html: \n    toc: true\n---\n```\n\n## YAML: Chunk options {auto-animate=\"true\"}\n\n\n\n````default\n```{r species, warning=FALSE, fig.width=5, fig.cap=\"A propos de penguins\"}\nggplot(\n  penguins,\n  aes(\n    x = bill_length_mm, y = bill_depth_mm,\n    color = species, shape = species\n  )\n) +\n  geom_point() +\n  labs(x = \"Bill length (mm)\", y = \"Bill depth (mm)\")\n```\n\n````\n\n## YAML: Chunk options {auto-animate=\"true\"}\n\n\n````default\n```{r}\n#| label: bill-dims-species\n#| fig-width: 5\n#| fig-cap: A propos de penguins\nggplot(\n  penguins,\n  aes(\n    x = bill_length_mm, y = bill_depth_mm,\n    color = species, shape = species\n  )\n) +\n  geom_point() +\n  scale_color_colorblind() +\n  labs(x = \"Bill length (mm)\", y = \"Bill depth (mm)\") +\n  theme_minimal()\n```\n````\n\n## YAML: Chunk options {auto-animate=\"true\"}\n\n````yaml\n#| label: bill-dims-species\n#| fig-width: 5\n#| fig-cap: A propos de penguins\n````\n\nQuarto introduit le \"hash pipe\" dans `#|` - c'est la syntaxe pr√©f√©r√©e, bien que Quarto soit r√©trocompatible avec l'ancienne syntaxe R Markdown.\n\n1. Coh√©rence entre les _computation engine_ (Jupyter/knitr)\n2. Coh√©rence entre les options YAML / Chunk / Divs (`:::`)\n3. Une option par ligne, offrant l'autocompl√©tion et la validation\n\n## YAML: Chunk options {auto-animate=\"true\"}\n\n````yaml\n#| fig-width: 5\n#| fig-cap: A propos de penguins\n````\n\nNotez que le YAML pour Quarto suivra une syntaxe de type \"mot-mot\"\n\n::: {.callout-note appearance=\"minimal\"}\nLa diff√©rence de syntaxe est due au fait que Quarto est plus √©troitement align√© sur les noms de format et les options de Pandoc (d'o√π l'utilisation de - comme s√©parateur de mots au lieu de `_` ou `.`).\n:::\n\n\n## A vous !\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_88cee961\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n::: callout\n# Transformons en .qmd\n\n1.  Copier `manchots.Rmd` √† `nouveau-manchots.qmd`\n2.  Utiliser `knitr::convert_chunk_header()` sur le fichier .qmd (Regarder l'aide de la fonction)\n3.  V√©rifier les configurations des chunks de code (`.` √† transformer en `-` par example)\n4.  V√©rifier l'en-t√™te YAML du fichier `.qmd`\n5.  Produire un HTML du document au format `.qmd`\n:::\n\n::: callout-tip\n## Nouvelle fonctionnalit√© Quarto\n\nTester l'autocompletion et validation YAML dans RStudio IDE [üîó](https://quarto.org/docs/tools/rstudio.html#yaml-intelligence)\n:::\n\n# Quarto unifie R Mardown\n\nRetrouvons des fonctionnalit√©s !\n\n## Callout Blocks {.smaller}\n\n![](https://github.com/rstudio/bookdown/raw/main/man/figures/logo.png){.absolute fig-alt=\"Logo bookdown\" top=\"-20\" right=\"100\" height=\"120\"}\n\n| R Markdown                                                                                                                                          | Quarto                                                                                                                |\n|----------------------------------|--------------------------------------|\n| [Custom Blocks](https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html) de **rmarkdown** et **bookdown** √† cr√©er et *styliser* soit m√™me. | [Callout Blocks](https://quarto.org/docs/authoring/callouts.html) disponible dans tous les formats et d√©j√† *stylis√©*. |\n\n``` markdown\n::: {.callout-note}\n\n## √Ä propos des 'callouts'\n\nNotez qu'il existe cinq types de 'callout', dont : `note`, `warning`, `important`, `tip`, et `caution`.\n:::\n```\n\n::: callout-note\n\n## √Ä propos des 'callouts'\n\nNotez qu'il existe cinq types de 'callout', dont : `note`, `warning`, `important`, `tip`, et `caution`.\n:::\n\n## R√©f√©rences (Figures, Tables, ...) {.smaller}\n\n![](https://github.com/rstudio/bookdown/raw/main/man/figures/logo.png){.absolute fig-alt=\"Logo bookdown\" top=\"-40\" right=\"100\" height=\"120\"}\n\n| R Markdown                                                                                                       | Quarto                                                                                                                                                |\n|----------------------------------|--------------------------------------|\n| Disponible avec **bookdown** dans les formats \"book\" (ex. `gitbook()`) ou les variantes comme `html_document2()` | [Cross References](https://quarto.org/docs/authoring/cross-references.html) disponible dans tous les formats, pour plus de contenus et configurables. |\n\n::: callout-important\n## Changement de syntaxe !\n\n-   Pr√©fixe n√©cessaire sur le label sous la forme `fig-` et non `fig:`\n-   M√™me syntax que citation avec `@label` et non pas `\\@ref(label)`\n:::\n\n``` {.markdown data-id=\"md-block\"}\nVoir @fig-quarto-schematic pour une illustration du fonctionnement de Quarto par Alison Horst.\n\n![Un sch√©ma illustr√© de Quarto](images/quarto-schematics.png){#fig-quarto-schematic}\n```\n\n## R√©f√©rences (Figures, Tables, ...) {.smaller}\n\n![](https://github.com/rstudio/bookdown/raw/main/man/figures/logo.png){.absolute fig-alt=\"Logo bookdown\" top=\"-40\" right=\"100\" height=\"120\"}\n\n``` {.markdown data-id=\"md-block\"}\nVoir @fig-quarto-schematic pour une illustration du fonctionnement de Quarto par Alison Horst.\n\n![Un sch√©ma illustr√© de Quarto](images/quarto-schematics.png){#fig-quarto-schematic}\n```\n\n::: columns\n::: column\nVoir @fig-quarto-schematic pour une illustration du fonctionnement de Quarto par Alison Horst.\n:::\n\n::: column\n![A schematic representing rendering of Quarto documents from .qmd](images/quarto-schematics.png){#fig-quarto-schematic fig-alt=\"A schematic representing rendering of Quarto documents from .qmd, to knitr or jupyter, to plain text markdown, then converted by pandoc into any number of output types including html, PDF, or Word document.\"}\n:::\n:::\n\n::: attribution\nIllustration extrait de la Keynote \"Hello, Quarto\" de Julia Lowndes et Mine √áetinkaya-Rundel (RStudio::conf(2022)).\n:::\n\n## Mise en page avanc√©e {.smaller}\n\n![](https://github.com/rstudio/distill/raw/main/man/figures/logo.png){.absolute fig-alt=\"Logo distill\" top=\"-40\" right=\"100\" height=\"120\"}\n\n| R Markdown                                                                                                                                                                                                 | Quarto                                                                                                                         |\n|----------------------------------|--------------------------------------|\n| Disponible pour HTML avec **distill** ([Figure avanc√©e](https://rstudio.github.io/distill/figures.html)) ou **tufte** ([Contenu dans la marge](https://rstudio.github.io/tufte/#arbitrary-margin-content)) | [Article Layout](https://quarto.org/docs/authoring/article-layout.html) disponible pour format multiple et plus flexibilit√©. |\n\n::: {layout-ncol=2}\n![](images/2-quarto-layout.png)\n\n![](images/3-quarto-layout.png)\n:::\n\n::: aside\nAttention √† la conversion **distill** √† Quarto √† cause de conflits d'options ! \n:::\n\n## A Vous !\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_d79ac2d4\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n::: callout\n\n# Ajoutez ces fonctionnalit√©s !\n\n* Essayer d'ajouter les fonctionnalit√©s suivantes: \n  * [Article Layout](https://quarto.org/docs/authoring/cross-references.html), \n  * [Cross References](https://quarto.org/docs/authoring/cross-references.html), \n  * [Callout Blocks](https://quarto.org/docs/authoring/callouts.html)\n* Regarder comment ajouter des mises en pages pour les figures ([Figure computation](https://quarto.org/docs/authoring/figures.html#computations))\n* Et bien plus dans la section [Authoring](https://quarto.org/docs/guide/) du guide Quarto. Curieux des fonctionnalit√©s uniques de Quarto ?\n  * [Code Annotation](https://quarto.org/docs/authoring/code-annotation.html)\n  * [Diagram](https://quarto.org/docs/authoring/diagrams.html)\n:::\n\n# Les formats Quarto\n\nComme R Markdown, on peut produire diff√©rents formats de documents.\n\n## De multiples formats...\n\n:::: columns\n::: column\n* `format: html`\n* `format: pdf`\n:::\n::: column\n* `format: docx`\n* `format: revealjs`\n:::\n::::\n\n```yaml\nformat: \n  html:\n    code-fold: true\n  pdf:\n    lof: true #<1>\ntoc: true #<2>\n```\n1. `lof` = _List Of Figures_\n2. Option commune aux formats HTML et PDF\n\n<br>\n\n## ...bas√©e sur Pandoc \n\n## {background-video=\"images/quarto-all-formats.mp4\" background-video-loop=true background-video-muted=true}\n\n## Options Specifiques - Themes HTML\n\nLe HTML de Quarto est stylis√© avec Bootstrap 5 et des valeurs par d√©faut choisies pour Quarto.\n\n```yaml\n---\nformat:\n  html:\n    theme: litera\n---\n```\n\n## Options Specifiques - Themes HTML {#html-theme auto-animate=\"true\"}\n\nLe HTML de Quarto est stylis√© avec Bootstrap 5 et des valeurs par d√©faut choisies pour Quarto.\n\n```yaml\n---\nformat:\n  html:\n    theme: \n      - litera\n      - custom.scss\n---\n```\n\n::::: {.r-stack}\n\nVous pouvez √©galement utiliser un th√®me et personnaliser les composants avec SCSS/SASS.\n\n:::: {.fragment}\n\n::: {.callout-note appearance=\"minimal\"}\nTalk sur le sujet plus tard dans la semaine ! üòâ\n:::\n\n::::\n:::::\n\n## _Code tools_\n\n```yaml\nformat:\n  html:\n    code-fold: true\n    code-tools: true\n```\n\n![](images/code-tools.png){fig-alt=\"Capture d'√©cran du menu ajout√© dans un HTML quarto quand code-tools est activ√©\"}\n\n## D√©couvrir les options ! \n\n* Guide Quarto: <https://quarto.org/docs/guide/>\n* Pages de r√©f√©rencement des options pour chaque format: <https://quarto.org/docs/reference/>\n\n## D√©mo \n\n::: callout\n\n# G√©n√©rons un PDF\n\n* Pas ou peu de changement dans la `.qmd` utilis√© pour produire un HTML.\n:::\n\n::: {.callout-warning}\n\n## Si vous voulez essayer... \n\nIl faut √™tre configur√© pour LaTeX mais\n\n* PDF = LaTeX => Installation de TinyTeX\n* LaTeX = Paquets CTAN => Installation longue\n* Produire un PDF avec LaTeX => Pas si rapide\n\n:::\n\n# \n\nAllons plus pour produire des contenus plus √©labor√© avec Quarto \n\n[[Next]{.button}](/3-documents/)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\r\n"
      ],
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}