{
  "hash": "2134c10d955b91cce9d6b356d42c395a",
  "result": {
    "markdown": "---\ntitle: \"Les projets Quarto pour des contenus élaborés\"\nsubtitle: \"De R Markdown à Quarto pour aller plus loin avec ses publications\"\ninstitute: \"Posit\"\nauthor: \"Christophe Dervieux\"\ndate: \"2023-06-21\"\nformat: clean-revealjs\ncode-line-numbers: false\neditor: visual\nfilter:\n  - lightbox\n---\n\n\n\n\n## Projet Quarto ?\n\nLes projets Quarto sont des **répertoires** qui fournissent :\n\n::: incremental\n* un moyen de rendre tout ou partie des fichiers d'un répertoire à l'aide d'une seule commande (par exemple, `quarto render myproject`).\n* Un moyen de partager la configuration YAML entre plusieurs documents.\n* La possibilité de rediriger les artefacts de sortie vers un autre répertoire.\n* La possibilité de geler le rendu (c'est-à-dire de ne pas réexécuter les documents à moins qu'ils n'aient changé).\n:::\n\n## Nous avons créés un projet déjà...\n\nUn projet, c'est un répertoire avec un `_quarto.yml` aussi simple soit t'il.\n\n``` {.yaml filename=\"_quarto.yml\"}\nproject:\n  title: \"Quarto-101\"\n```\n\nMais, les projets peuvent avoir des \"types\" spéciaux qui introduisent un comportement supplémentaire (par exemple, les sites web ou les livres).\n\n## Quarto Website`\n\n-   Profondeur et organisation arbitraires du contenu\n-   Navigation à plusieurs niveaux (barre de navigation / barre latérale / hybride)\n-   Recherche en texte intégral (côté client ou Algolia)\n-   Gel des résultats de calcul (configuration `freeze`)\n\n## Quarto Website\n\n``` {.yaml filename=\"_quarto.yml\" code-line-numbers=\"|2|4-5|6-10|12-15\"}\nproject:\n  type: website\n\nwebsite:\n  title: \"today\"\n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n      - about.qmd\n\nformat:\n  html:\n    theme: cosmo\n    toc: true\n```\n\n::: aside\nExemple: <https://quarto.org>\n:::\n\n## Quarto Blogs\n\n* Hérite des fonctionnalités des sites Quarto (navigation, recherche, etc.)\n\n* Liste d'article et flux RSS générés automatiquement\n\n```{.yaml filename=\"index.qmd\"}\n---\ntitle: \"myblog\"\nlisting:\n  contents: posts\n  sort: \"date desc\"\n  type: default\n  categories: true\n---\n```\n\n## {background-image=images/screenshot-blog.png}\n\n## Quarto Books\n\n-   Hérite des fonctionnalités des sites Quarto (navigation, recherche, etc.)\n-   Supporte les références croisées entre les chapitres\n-   Les formats de sortie possible sont HTML, PDF, MS Word et ePub.\n\n::: aside\nExemples: <https://quarto.org/docs/gallery/#books>\n:::\n\n## Quarto Books\n\n```{.yaml filename=\"_quarto.yml\" code-line-numbers=\"|2|4-5|8-12|14|16-22\"}\nproject:\n  type: book\n\nbook:\n  title: \"mybook\"\n  author: \"Jane Doe\"\n  date: \"8/18/2021\"\n  chapters:\n    - index.qmd\n    - intro.qmd\n    - summary.qmd\n    - references.qmd\n\nbibliography: references.bib\n\nformat:\n  html:\n    theme: cosmo\n  pdf:\n    documentclass: scrreport\n  epub:\n    cover-image: cover.png\n```\n\n##  {background-image=\"images/screenshot-book-hopr.png\"}\n\n## Et bien plus de nouveautés...\n\n- [Métadonnées partagées par sous dossier](https://quarto.org/docs/projects/quarto-projects.html#shared-metadata) avec `_metadata.yml`\n- [Exécuter des scripts avant et après `quarto render` (_Project Scripts)](https://quarto.org/docs/projects/scripts.html)\n- [_About Page_ comme le package R **postcard**](https://quarto.org/docs/websites/website-about.html#templates)\n- [Création de liste d'articles personnalisés](https://quarto.org/docs/websites/website-listings-custom.html)\n- ...\n\n## A vous! \n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_0877ed04\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n::: {.callout}\n\n# Transformons notre projet en site web\n\n1. Ajouter un `index.qmd` dans votre projet existant `Quarto-101`\n2. Modifier le `_quarto.yml` pour faire un site web\n3. Ajoutez la navigation pour affichier votre rapport `nouveau-manchots.qmd`\n4. `Render` depuis `index.qmd` et admirez le résultas\n:::\n\n::: callout-tip\nDocumentations de Quarto websites pour jouer avec les options: https://quarto.org/docs/websites/\n:::\n\n# \n\nPassons au récap...\n\n[[Next]{.button}](/3-documents/)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\r\n"
      ],
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}